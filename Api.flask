from flask import Flask, jsonify
import psycopg2

app = Flask(_name_)

# Configuración de la conexión a la base de datos PostgreSQL
DB_HOST = 'localhost'
DB_NAME = 'tu_basedatos'
DB_USER = 'usuario'
DB_PASSWORD = 'contraseña'

def get_db_connection():
    return psycopg2.connect(host=DB_HOST, database=DB_NAME, user=DB_USER, password=DB_PASSWORD)

@app.route('/api/Coordenadas')
def get_actividades():
    try:
        conn = get_db_connection()
        cur = conn.cursor()

        cur.execute("SELECT * FROM coordenadas")
        rows = cur.fetchall()

        # Preparar los datos para la salida en formato JSON
        Coordenadas = []
        for row in rows:
            coordenada = {
                'latitud': row[0],
                'longitud': row[1],
            }
            Coordenadas.append(coordenada)

        cur.close()
        conn.close()

        # Devolver JSON
        return jsonify(actividades)

    except Exception as e:
        return jsonify({'error': str(e)})

if _name_ == '_main_':
    app.run(debug=True)
	
	
	
	///////////////////////////
	
	
	from flask import Flask, jsonify
import psycopg2

app = Flask(_name_)

# Configuración de la conexión a la base de datos PostgreSQL
DB_HOST = 'localhost'
DB_NAME = 'tu_basedatos'
DB_USER = 'usuario'
DB_PASSWORD = 'contraseña'

def get_db_connection():
    return psycopg2.connect(host=DB_HOST, database=DB_NAME, user=DB_USER, password=DB_PASSWORD)

@app.route('/api/Coordenadas')
def get_actividades():
    try:
        conn = get_db_connection()
        cur = conn.cursor()

        cur.execute("SELECT * FROM coordenadas")
        rows = cur.fetchall()

        # Preparar los datos para la salida en formato JSON
        Coordenadas = []
        for row in rows:
            coordenada = {
                'latitud': row[0],
                'longitud': row[1],
            }
            Coordenadas.append(coordenada)

        cur.close()
        conn.close()

        # Devolver JSON
        return jsonify(actividades)

    except Exception as e:
        return jsonify({'error': str(e)})

if _name_ == '_main_':
    app.run(debug=True)